datasource postgresql {
  url = env("DATABASE_PRISMA_URL")
  provider = "postgresql"
  directUrl = env("DATABASE_URL_NON_POOLING") 
  shadowDatabaseUrl = env("DATABASE_URL_NON_POOLING") 
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                      String     @id @default(cuid())
  name                    String     @default("")
  email                   String     @unique @default("")
  hashedPassword          String?
  cart                    CartItem[] @relation("CartItem_user")
  orders                  Order[]    @relation("Order_user")
  role                    Role?      @relation("User_role", fields: [roleId], references: [id])
  roleId                  String?    @map("role")
  products                Product[]  @relation("Product_user")
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?

  @@index([roleId])
}

model Product {
  id                    String        @id @default(cuid())
  name                  String        @default("")
  description           String        @default("")
  photo                 String?       
  status                String?       @default("DRAFT")
  price                 Int?
  user                  User?         @relation("Product_user", fields: [userId], references: [id])
  userId                String?       @map("user")
  from_CartItem_product CartItem[]    @relation("CartItem_product")

  @@index([userId])
}

model CartItem {
  id        String   @id @default(cuid())
  quantity  Int      @default(1)
  product   Product? @relation("CartItem_product", fields: [productId], references: [id])
  productId String?  @map("product")
  user      User?    @relation("CartItem_user", fields: [userId], references: [id])
  userId    String?  @map("user")

  @@index([productId])
  @@index([userId])
}

model OrderItem {
  id          String        @id @default(cuid())
  name        String        @default("")
  description String        @default("")
  photo       String?       
  price       Int?
  quantity    Int?
  order       Order?        @relation("OrderItem_order", fields: [orderId], references: [id])
  orderId     String?       @map("order")

  @@index([orderId])
}

model Order {
  id     String      @id @default(cuid())
  total  Int?
  items  OrderItem[] @relation("OrderItem_order")
  user   User?       @relation("Order_user", fields: [userId], references: [id])
  userId String?     @map("user")

  @@index([userId])
}

model Role {
  id                String  @id @default(cuid())
  name              String  @default("")
  canManageProducts Boolean @default(false)
  canSeeOtherUsers  Boolean @default(false)
  canManageUsers    Boolean @default(false)
  canManageRoles    Boolean @default(false)
  canManageCart     Boolean @default(false)
  canManageOrders   Boolean @default(false)
  assignedTo        User[]  @relation("User_role")
}